function(a){Rubikjs.Renderer.call(this,a);a="canvas"==a.localName?a:null;try{this.gl=a.getContext("experimental-webgl"),void 0==this.gl&&(this.gl=a.getContext("webgl")),void 0==this.gl&&alert("No WebGL :(")}catch(b){}this.gl.enable(this.gl.DEPTH_TEST);this.shader=new Rubikjs.WebGL.Shader(this.gl);this.shader.compile("#ifdef GL_ES\nprecision highp float;\n#endif\nattribute vec3 aVertexPosition;attribute vec4 aVertexColor;uniform mat4 uMVMatrix;uniform mat4 uPMatrix;varying vec4 vColor;void main(void) {gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);vColor = aVertexColor;}","#ifdef GL_ES\nprecision highp float;\n#endif\nvarying vec4 vColor;void main(void) {gl_FragColor = vColor;}").uniform("uPMatrix",
this.perspectiveMat,"mat4")};Rubikjs.WebGL.Renderer.prototype=new Rubikjs.Renderer;Rubikjs.WebGL.Renderer.prototype.constructor=Rubikjs.WebGL.Renderer;Rubikjs.WebGL.Renderer.prototype.startFrame=function(){this.gl.clearColor(0,0,0,0);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)}