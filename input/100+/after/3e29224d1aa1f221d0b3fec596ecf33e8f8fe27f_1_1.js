function (errorMap, errorList) {

					this.defaultShowErrors();
					var errors = form.find("strong.error:not(:hidden)"),
						$errorFormId = 'errors-' + form.attr('id'),
						summaryContainer = form.find('#' + $errorFormId),
						summary;

					if (errors.length > 0) {
						alert("hi");
						// Create our container if one doesn't already exist
						if (summaryContainer.length === 0) {
							summaryContainer = $('<div id="' + $errorFormId + '" class="errorContainer" role="alert" tabindex="-1"/>').prependTo(form);
						} else {
							summaryContainer.empty();
						}

						// Post process
						summary = $('<ul></ul>');
						errors.each(function (index) {
							var $this = $(this),
								prefix = '<span class="prefix">' + pe.dic.get("%error") + '&#160;' + (index + 1) + pe.dic.get("%colon") + ' </span>',
								label = $this.closest("label");
							$this.find("span.prefix").detach();
							summary.append('<li><a href="#' + label.attr("for") + '">' + prefix + label.find('.field-name').html() + ' - ' + $this.html() + '</a></li>');
							$this.attr("role", "alert").prepend('<span class="prefix">' + pe.dic.get("%error") + '&#160;' + (index + 1) + pe.dic.get("%colon") + ' </span>');
						});

						// Output our error summary and place it in the error container
						summaryContainer.append($('<p>' + pe.dic.get("%form-not-submitted") + this.numberOfInvalids() + (this.numberOfInvalids() !== 1 ? pe.dic.get("%errors-found") : pe.dic.get("%error-found")) + '</p>'));
						summaryContainer.append(summary);

						// Put focus on the error if the errors are generated by an attempted form submission
						if (submitted) {
							pe.focus(summaryContainer);
						}

						// Move the focus to the associated input when error message link is triggered
						// a simple href anchor link doesnt seem to place focus inside the input
						if (pe.ie === 0 || pe.ie > 7) {
							form.find(".errorContainer a").on("click vclick", function () {
								var label_top = pe.focus($($(this).attr("href"))).prev().offset().top;
								if (pe.mobile) {
									$.mobile.silentScroll(label_top);
								} else {
									$(document).scrollTop(label_top);
								}
								return false;
							});
						}

						submitted = false;
					} else {
						summaryContainer.detach();
					}
				}