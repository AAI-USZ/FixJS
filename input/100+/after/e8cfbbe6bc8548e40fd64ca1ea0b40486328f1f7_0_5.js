function(){var d=[];for(var b=0,c=this.actors.length;b<c;b+=1){d.push(this.actors[b].name)}return d};function vxlSceneToys(a){this.scene=a;this.list=[];this.axis=new vxlAxis();this.boundingbox=new vxlBoundingBox();this.floor=new vxlFloor();this.list.push(this.axis);this.list.push(this.boundingbox);this.list.push(this.floor)}vxlSceneToys.prototype.update=function(){this.axis.setCentre(this.scene.centre);this.boundingbox.setBoundingBox(this.scene.bb)};vxlSceneToys.prototype.render=function(c){for(var b=0,a=this.list.length;b<a;b+=1){this.list[b].allocate(c);this.list[b].render(c)}};function vxlLookupTable(){this.ID=null;this.map=null;this.max=Number.MIN_VALUE;this.min=Number.MAX_VALUE}vxlLookupTable.prototype.load=function(a,c){this.ID=a;this.map=c;for(var b in this.map){var d=Number(b);if(d<this.min){this.min=d}else{if(d>=this.max){this.max=d}}}};vxlLookupTable.prototype.getColor=function(d){var a=this;var b=Math.round(d);if(b>=a.min&&b<=a.max){var e=[a.map[b][0],a.map[b][1],a.map[b][2],1];return e}else{if(b<a.min){return[a.map[a.min][0],a.map[a.min][1],a.map[a.min][2],1]}else{if(b>a.max){return[a.map[a.max][0],a.map[a.max][1],a.map[a.max][2],1]
}else{alert("assertion error in getColor routine");return[a.map[a.min][0],a.map[a.min][1],a.map[a.min][2],1]}}}};vxlLookupTable.prototype.getColors=function(e,d,a){var h=[];for(var b=0;b<e.length;b++){var f=e[b]*this.max/a;var g=this.getColor(f);h.push(g[0]);h.push(g[1]);h.push(g[2]);h.push(g[3])}return h};function vxlLookupTableManager(){this.lutTimerID=0;this.tables=[];this.location="";vxl.go.notifier.addSource(vxl.events.DEFAULT_LUT_LOADED,this)}vxlLookupTableManager.prototype.setLocation=function(a){this.location=a}