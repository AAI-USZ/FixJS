fJ=w[z[u]][0],L=w[z[u]][1],M=w[z[x]][0],K=w[z[x]][1];if(e>(J-H)*(K-G)-(L-G)*(M-H))w=!1;else{for(F=0;F<E;F++)if(!(F==y||F==u||F==x)){var N=w[z[F]][0],S=w[z[F]][1],ca=void 0,V=void 0,na=void 0,Q=void 0,O=void 0,Ma=void 0,gb=void 0,hb=void 0,Na=void 0,qb=void 0,Oa=void 0,ib=void 0,ca=na=O=void 0,ca=M-J,V=K-L,na=H-M,Q=G-K,O=J-H,Ma=L-G,gb=N-H,hb=S-G,Na=N-J,qb=S-L,Oa=N-M,ib=S-K,ca=ca*qb-V*Na,O=O*hb-Ma*gb,na=na*ib-Q*Oa;if(0<=ca&&0<=na&&0<=O){w=!1;break a}}w=!0}}if(w){q=d[s];s=d[f];n=d[n];c.push(q);c.push(s);
c.push(n);h++;n=f;for(q=f+1;q<b;n++,q++)d[n]=d[q];b--;q=2*b}}return c}function w(a,c,b){b===d&&(b=0);var f;f=y(c);var e=CubicVR.util.repackArray(f,3,f.length/3),h=[],n=a.points.length;f=0;for(iMax=c.length;f<iMax;f++)h.push([c[f][0],c[f][1],b]);a.addPoint(h);f=0;for(iMax=e.length;f<iMax;f++)a.addFace([e[f][0]+n,e[f][1]+n,e[f][2]+n])}function q(a,c){var b=c[0]-a[0],d=c[1]-a[1];return Math.sqrt(b*b+d*d)}function n(a,c){var b,d,f=[],e=a.length,h=c.length,n=[];for(b=0;b<e;b++)for(d=0;d<h;d++){var s=q(a[b],
