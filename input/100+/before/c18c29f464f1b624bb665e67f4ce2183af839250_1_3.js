function(e, eventData) {
				var self = this;
				
				// finds a certain value in an array generated by jQuery.serializeArray()
				var findInSerializedArray = function(arr, name) {
					for(var i=0; i<arr.length; i++) {
						if(arr[i].name == name) return arr[i].value;
					};
					return false;
				};

				var handledform = $(e.target).is('.cms-edit-form') ? $(e.target)[0] : $(e.target).find('.cms-edit-form')[0];
				var id = handledform ? $(handledform.ID).val() : null;

				// check if a form with a valid ID exists
				if(id) {
					var parentID = $(handledform.ParentID).val(), 
						parentNode = this.find('li[data-id='+parentID+']');
						node = this.find('li[data-id='+id+']'),
						title = $((handledform.TreeTitle) ? handledform.TreeTitle : handledform.Title).val(),
						className = $(handledform.ClassName).val();

					// set title (either from TreeTitle or from Title fields)
					// Treetitle has special HTML formatting to denote the status changes.
					if(title) this.jstree('rename_node', node, title);

					// TODO Fix node icon setting
					// // update icon (only if it has changed)
					// if(className) this.setNodeIcon(id, className);

					// check if node exists, might have been created instead
					if(!node.length) {
						this.jstree(
							'create_node', 
							parentNode, 
							'inside', 
							{data: '', attr: {'class': className, 'data-id': id}},
							function() {
								var newNode = self.find('li[data-id='+id+']');
								// TODO Fix hardcoded link
								// TODO Fix replacement of jstree-icon inside <a> tag
								newNode.find('a:first').html(title).attr('href', 'admin/show/'+id);
								self.jstree('deselect_node', parentNode);
								self.jstree('select_node', newNode);
							}
						);
						// set current tree element
						this.jstree('select_node', node);
					}

					// TODO Fix node parent setting
					// // set correct parent (only if it has changed)
					// if(parentID) this.setNodeParentID(id, jQuery(e.target.ParentID).val());

					// TODO Fix doubleup when replacing page form with root form, reloads the old form over the root
					// set current tree element regardless of wether the item was new
					// this.jstree('select_node', node);
				} else {
					if(typeof eventData.origData != 'undefined') {
						var node = this.find('li[data-id='+eventData.origData.ID+']');
						if(node && node.data('id') != 0) this.jstree('delete_node', node);
					}
				}

			}