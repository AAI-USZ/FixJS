function(a){this.initConfig(a);null!=a.value&&a.value.constructor===Object&&this.setValue(a.value);this.getEager()&&(null!=this.getValue()&&Ext.Error.raise({msg:"Error while configuring '"+this.getIdentifier()+"': a 'value' cannot be created eagerly."}),this.getSingleton()||Ext.Error.raise({msg:"Error while configuring '"+
this.getIdentifier()+"': only singletons can be created eagerly."}));this.getSingleton()?null!=this.getClassName()&&null!=this.getParameters()&&Ext.ClassManager.get(this.getClassName()).singleton&&Ext.Error.raise({msg:"Error while configuring rule for '"+this.getIdentifier()+"': parameters cannot be applied to singleton classes. Consider removing 'singleton: true' from the class definition."}):(null!=this.getClassName()&&Ext.ClassManager.get(this.getClassName()).singleton&&Ext.Error.raise({msg:"Error while configuring rule for '"+
this.getIdentifier()+"': singleton classes cannot be configured for injection as a prototype. Consider removing 'singleton: true' from the class definition."}),null!=this.getValue()&&Ext.Error.raise({msg:"Error while configuring '"+this.getIdentifier()+"': a 'value' can only be configured as a singleton."}));return this}