function(f,e,a,h){var g=function(l,j,n){var k=f(l),i=/^(checked|selectedIndex)$/,m=("onpropertychange" in a.body);if(!k.length||typeof j!=="string"){return k}if(j!=="change"){return k.bind(j,n)}k.each(function(){j=m&&(this.type==="checkbox"||this.tagName.toLowerCase()==="select"&&this.multiple)?"propertychange":"change";f(this).bind(j,function(o){if(o.type!=="propertychange"||i.test(e.event.propertyName)){n.call(this,o)}})})};var b=function(l,j){var i={},k=typeof l;if(k==="function"){i.method=l}else{if(k==="string"&&l in j){i=j[l]}else{if(k==="object"){k=typeof l.method;if(k==="function"){i=l}else{if(k==="string"&&l.method in j){i=j[l.method]}}if(typeof i.options==="object"){i.options=f.extend(true,{},i.options,l.options)}else{i.options={}}}}}return i};var c=f.type||(function(){var i={},j=Object.prototype.toString;f.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(l,k){i["[object "+k+"]"]=k.toLowerCase()});return function(k){return k==null?String(k):i[j.call(k)]||"object"}})();f.autosave={timer:0,$queues:f({}),options:{namespace:"autosave",callbacks:{trigger:"change",scope:null,data:"serialize",condition:null,save:"ajax"},events:{save:"save",saved:"saved",changed:"changed"},classes:{changed:"changed",ignore:"ignore"}},initialize:function(m,j){var i=this;f.extend(this,{context:m.context||a,selector:m.selector||m,options:f.extend(true,{},this.options,j)});if(this.elements().length){var l,n=this.forms(),k=this.inputs();n.data(this.options.namespace,this);f.each(this.options.events,function(p,o){i.options.events[p]=[o,i.options.namespace].join(".")});f.each(this.options.classes,function(o,p){i.options.classes[o]=[i.options.namespace,p].join("-")});f.each(this.options.callbacks,function(o,p){l=[];if(p){f.each(f.isArray(p)?p:[p],function(q,r){r=b(r,i.callbacks[o]);if(f.isFunction(r.method)){l.push(r)}})}i.options.callbacks[o]=l});g(n,this.options.events.save,function(p,o){i.save(o,p.type)});g(k,"change",function(o){f(this).addClass(i.options.classes.changed);f(this.form).triggerHandler(i.options.events.changed,[this])});f.each(this.options.callbacks.trigger,function(p,o){o.method.call(i,o.options)})}return m},elements:function(i,j){i=i||this.selector;j=j||this.context;return f(i,j).filter(function(){return(this.elements||this.form)})},forms:function(i){return f(f.unique(this.elements(i).map(function(){return this.elements?this:this.form}).get()))},inputs:function(i){return this.elements(i).map(function(){return this.elements?f.makeArray(this.elements):this})},validInputs:function(i){var j=this;return this.inputs(i).filter(function(){return !f(this).hasClass(j.options.classes.ignore)})},changedInputs:function(i){var j=this;return this.inputs(i).filter(function(){return f(this).hasClass(j.options.classes.changed)})},startInterval:function(j){var i=this;j=j||this.interval;if(this.timer){this.stopInterval()}if(!isNaN(parseInt(j))){this.timer=setTimeout(function(){i.save(false,i.timer)},j)}},stopInterval:function(){clearTimeout(this.timer);this.timer=null},save:function(i,k){var j=this,n=false,l=this.validInputs(i);if(this.options.callbacks.save.length){f.each(this.options.callbacks.scope,function(p,q){l=q.method.call(j,q.options,l)});if(l.length){var o,m=true;f.each(this.options.callbacks.data,function(p,q){o=q.method.call(j,q.options,l,o)});f.each(this.options.callbacks.condition,function(p,q){return(m=q.method.call(j,q.options,l,o,k))!==false});if(m){f.each(this.options.callbacks.save,function(p,q){j.$queues.queue("save",function(){if(q.method.call(j,q.options,o)!==false){j.next("save")}})});n=true}}}this.next("save",n)},next:function(k,j){var i=this.$queues.queue(k);if(i&&i.length){this.$queues.dequeue(k)}else{this.finished(i,k,j)}},finished:function(i,k,j){if(k==="save"){if(i){this.forms().triggerHandler(this.options.events.saved)}if(j!==false){this.changedInputs().removeClass(this.options.classes.changed)}if(this.timer){this.startInterval()}}}};var d=f.autosave.callbacks={};f.each(f.autosave.options.callbacks,function(i){d[i]={}});f.extend(d.trigger,{change:{method:function(){var i=this;this.forms().bind(this.options.events.changed,function(k,j){i.save(j,k.type)})}},interval:{method:function(i){if(!isNaN(parseInt(i.interval))){this.startInterval(this.interval=i.interval)}},options:{interval:30000}}});f.extend(d.scope,{all:{method:function(){return this.validInputs()}},changed:{method:function(){return this.changedInputs()}}});f.extend(d.data,{serialize:{method:function(i,j){return j.serialize()}},serializeArray:{method:function(i,j){return j.serializeArray()}},serializeObject:{method:function(i,j){var k={};f.each(j.serializeArray(),function(m,p){var q=p.name,l=p.value;k[q]=k[q]===h?l:f.isArray(k[q])?k[q].concat(l):[k[q],l]});return k}}});f.extend(d.condition,{interval:{method:function(j,k,l,i){return(!this.timer||this.timer===i)}},changed:{method:function(){return this.changedInputs().length>0}}});f.extend(d.save,{ajax:{method:function(k,m){var j=this,n=f.extend({},k);if(f.isFunction(n.data)){n.data=n.data.call(j,m)}n.complete=function(p,o){if(f.isFunction(k.complete)){k.complete.apply(j,arguments)}j.next("save")};var l=c(m),i=c(n.data);if(l!==i){throw"Type mismatch: cannot merge form data with options data!"}else{if(l==="array"){n.data=f.merge(m,n.data)}else{if(l==="object"){n.data=f.extend(m,n.data)}else{if(l==="string"){n.data=m+(m.length?"&":"")+n.data}else{n.data=m}}}}f.ajax(n);return false},options:{url:e.location.href,type:"POST"}}});f.fn.autosave=function(i){return f.extend({},f.autosave).initialize(this,i)}}