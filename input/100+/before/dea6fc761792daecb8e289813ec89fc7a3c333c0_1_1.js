function(){var D={padding:{top:0,left:0,right:0,bottom:0},fill:{alphas:["1"]},border:{weight:0,alpha:1}};D.fill.colors=this._defaultSliceColors;D.border.colors=this._defaultBorderColors;return D;},_defaultLineColors:["#426ab3","#d09b2c","#000000","#b82837","#b384b5","#ff7200","#779de3","#cbc8ba","#7ed7a6","#007a6c"],_defaultFillColors:["#6084d0","#eeb647","#6c6b5f","#d6484f","#ce9ed1","#ff9f3b","#93b7ff","#e0ddd0","#94ecba","#309687"],_defaultBorderColors:["#205096","#b38206","#000000","#94001e","#9d6fa0","#e55b00","#5e85c9","#adab9e","#6ac291","#006457"],_defaultSliceColors:["#66007f","#a86f41","#295454","#996ab2","#e8cdb7","#90bdbd","#000000","#c3b8ca","#968373","#678585"],_getDefaultColor:function(G,H){var E={line:this._defaultLineColors,fill:this._defaultFillColors,border:this._defaultBorderColors,slice:this._defaultSliceColors},F=E[H],D=F.length;G=G||0;if(G>=D){G=G%D;}H=H||"fill";return E[H][G];}},{ATTRS:{type:{value:"pie"},order:{},graph:{},categoryAxis:{value:null,validator:function(D){return D!==this.get("categoryAxis");}},valueAxis:{value:null,validator:function(D){return D!==this.get("valueAxis");}},categoryKey:{value:null,validator:function(D){return D!==this.get("categoryKey");}},valueKey:{value:null,validator:function(D){return D!==this.get("valueKey");}},categoryDisplayName:{setter:function(D){this._categoryDisplayName=D;return D;},getter:function(){return this._categoryDisplayName||this.get("categoryKey");}},valueDisplayName:{setter:function(D){this._valueDisplayName=D;return D;},getter:function(){return this._valueDisplayName||this.get("valueKey");}},slices:null}});b.Gridlines=b.Base.create("gridlines",b.Base,[b.Renderer],{_path:null,remove:function(){var D=this._path;if(D){D.destroy();}},draw:function(){if(this.get("axis")&&this.get("graph")){this._drawGridlines();}},_drawGridlines:function(){var R,D=this.get("axis"),L=D.get("position"),O,I=0,F,M=this.get("direction"),P=this.get("graph"),N=P.get("width"),K=P.get("height"),Q=this.get("styles").line,H=Q.color,J=Q.weight,G=Q.alpha,E=M=="vertical"?this._verticalLine:this._horizontalLine;if(isFinite(N)&&isFinite(K)&&N>0&&K>0){if(L!="none"&&D&&D.get("tickPoints")){O=D.get("tickPoints");F=O.length;}else{O=[];F=D.get("styles").majorUnit.count;for(;I<F;++I){O[I]={x:N*(I/(F-1)),y:K*(I/(F-1))};}I=0;}R=P.get("gridlines");R.set("width",N);R.set("height",K);R.set("stroke",{weight:J,color:H,opacity:G});for(;I<F;++I){E(R,O[I],N,K);}R.end();}},_horizontalLine:function(G,F,D,E){G.moveTo(0,F.y);G.lineTo(D,F.y);},_verticalLine:function(G,F,D,E){G.moveTo(F.x,0);G.lineTo(F.x,E);},_getDefaultStyles:function(){var D={line:{color:"#f0efe9",weight:1,alpha:1}};return D;}},{ATTRS:{direction:{},axis:{},graph:{}}});b.Graph=b.Base.create("graph",b.Widget,[b.Renderer],{bindUI:function(){var D=this.get("boundingBox");D.setStyle("position","absolute");this.after("widthChange",this._sizeChangeHandler);this.after("heightChange",this._sizeChangeHandler);this.after("stylesChange",this._updateStyles);this.after("groupMarkersChange",this._drawSeries);},syncUI:function(){var D,G,H,L=this.get("seriesCollection"),I,J=0,K=L?L.length:0,E=this.get("horizontalGridlines"),F=this.get("verticalGridlines");if(this.get("showBackground")){D=this.get("background");G=this.get("contentBox");H=this.get("styles").background;H.stroke=H.border;H.stroke.opacity=H.stroke.alpha;H.fill.opacity=H.fill.alpha;H.width=this.get("width");H.height=this.get("height");H.type=H.shape;D.set(H);}for(;J<K;++J){I=L[J];if(I instanceof b.CartesianSeries){I.render();}}if(E&&E instanceof b.Gridlines){E.draw();}if(F&&F instanceof b.Gridlines){F.draw();}},seriesTypes:null,getSeriesByIndex:function(F){var D=this.get("seriesCollection"),E;if(D&&D.length>F){E=D[F];}return E;},getSeriesByKey:function(F){var E=this._seriesDictionary,D;if(E&&E.hasOwnProperty(F)){D=E[F];}return D;},addDispatcher:function(D){if(!this._dispatchers){this._dispatchers=[];}this._dispatchers.push(D);},_seriesCollection:null,_seriesDictionary:null,_parseSeriesCollection:function(H){if(!H){return;}var E=H.length,G=0,F,D;this._seriesCollection=[];this._seriesDictionary={};this.seriesTypes=[];for(;G<E;++G){F=H[G];if(!(F instanceof b.CartesianSeries)&&!(F instanceof b.PieSeries)){this._createSeries(F);continue;}this._addSeries(F);}E=this._seriesCollection.length;for(G=0;G<E;++G){F=this.get("seriesCollection")[G];D=F.get("direction")=="horizontal"?"yKey":"xKey";this._seriesDictionary[F.get(D)]=F;}},_addSeries:function(F){var G=F.get("type"),I=this.get("seriesCollection"),H=I.length,E=this.seriesTypes,D;if(!F.get("graph")){F.set("graph",this);}I.push(F);if(!E.hasOwnProperty(G)){this.seriesTypes[G]=[];}D=this.seriesTypes[G];F.set("graphOrder",H);F.set("order",D.length);D.push(F);this.addDispatcher(F);F.after("drawingComplete",b.bind(this._drawingCompleteHandler,this));this.fire("seriesAdded",F);},_createSeries:function(H){var I=H.type,J=this.get("seriesCollection"),F=this.seriesTypes,E,D,G;H.graph=this;if(!F.hasOwnProperty(I)){F[I]=[];}E=F[I];H.graph=this;H.order=E.length;H.graphOrder=J.length;D=this._getSeries(H.type);G=new D(H);this.addDispatcher(G);G.after("drawingComplete",b.bind(this._drawingCompleteHandler,this));E.push(G);J.push(G);if(this.get("rendered")){G.render();}},_seriesMap:{line:b.LineSeries,column:b.ColumnSeries,bar:b.BarSeries,area:b.AreaSeries,candlestick:b.CandlestickSeries,ohlc:b.OHLCSeries,stackedarea:b.StackedAreaSeries,stackedline:b.StackedLineSeries,stackedcolumn:b.StackedColumnSeries,stackedbar:b.StackedBarSeries,markerseries:b.MarkerSeries,spline:b.SplineSeries,areaspline:b.AreaSplineSeries,stackedspline:b.StackedSplineSeries,stackedareaspline:b.StackedAreaSplineSeries,stackedmarkerseries:b.StackedMarkerSeries,pie:b.PieSeries,combo:b.ComboSeries,stackedcombo:b.StackedComboSeries,combospline:b.ComboSplineSeries,stackedcombospline:b.StackedComboSplineSeries},_getSeries:function(D){var E;if(q.isString(D)){E=this._seriesMap[D];
}else{E=D;}return E;},_markerEventHandler:function(I){var G=I.type,D=I.currentTarget,H=D.getAttribute("id").split("_"),F=this.getSeriesByIndex(H[1]),E=H[2];F.updateMarkerState(G,E);},_dispatchers:null,_updateStyles:function(){var E=this.get("styles").background,D=E.border;D.opacity=D.alpha;E.stroke=D;E.fill.opacity=E.fill.alpha;this.get("background").set(E);this._sizeChangeHandler();},_sizeChangeHandler:function(J){var D=this.get("horizontalGridlines"),K=this.get("verticalGridlines"),E=this.get("width"),H=this.get("height"),G=this.get("styles").background,I,F;if(G&&G.border){I=G.border.weight||0;}if(this.get("showBackground")){F=this.get("background");if(E&&H){F.set("width",E);F.set("height",H);}}if(this._gridlines){this._gridlines.clear();}if(D&&D instanceof b.Gridlines){D.draw();}if(K&&K instanceof b.Gridlines){K.draw();}this._drawSeries();},_drawSeries:function(){if(this._drawing){this._callLater=true;return;}var F,E,D,G=this.get("graphic");G.set("autoDraw",false);this._callLater=false;this._drawing=true;F=this.get("seriesCollection");E=0;D=F?F.length:0;for(;E<D;++E){F[E].draw();if((!F[E].get("xcoords")||!F[E].get("ycoords"))&&!F[E] instanceof b.PieSeries){this._callLater=true;break;}}this._drawing=false;if(this._callLater){this._drawSeries();}},_drawingCompleteHandler:function(F){var E=F.currentTarget,G,D=b.Array.indexOf(this._dispatchers,E);if(D>-1){this._dispatchers.splice(D,1);}if(this._dispatchers.length<1){G=this.get("graphic");if(!G.get("autoDraw")){G._redraw();}this.fire("chartRendered");}},_getDefaultStyles:function(){var D={background:{shape:"rect",fill:{color:"#faf9f2"},border:{color:"#dad8c9",weight:1}}};return D;},destructor:function(){if(this._graphic){this._graphic.destroy();this._graphic=null;}if(this._background){this._background.get("graphic").destroy();this._background=null;}if(this._gridlines){this._gridlines.get("graphic").destroy();this._gridlines=null;}}},{ATTRS:{x:{setter:function(D){this.get("boundingBox").setStyle("left",D+"px");return D;}},y:{setter:function(D){this.get("boundingBox").setStyle("top",D+"px");return D;}},chart:{},seriesCollection:{getter:function(){return this._seriesCollection;},setter:function(D){this._parseSeriesCollection(D);return this._seriesCollection;}},showBackground:{value:true},seriesDictionary:{readOnly:true,getter:function(){return this._seriesDictionary;}},horizontalGridlines:{value:null,setter:function(E){var D=this.get("horizontalGridlines");if(D&&D instanceof b.Gridlines){D.remove();}if(E instanceof b.Gridlines){D=E;E.set("graph",this);return E;}else{if(E&&E.axis){D=new b.Gridlines({direction:"horizontal",axis:E.axis,graph:this,styles:E.styles});return D;}}}},verticalGridlines:{value:null,setter:function(E){var D=this.get("verticalGridlines");if(D&&D instanceof b.Gridlines){D.remove();}if(E instanceof b.Gridlines){D=E;E.set("graph",this);return E;}else{if(E&&E.axis){D=new b.Gridlines({direction:"vertical",axis:E.axis,graph:this,styles:E.styles});return D;}}}},background:{getter:function(){if(!this._background){this._backgroundGraphic=new b.Graphic({render:this.get("contentBox")});this._backgroundGraphic.get("node").style.zIndex=0;this._background=this._backgroundGraphic.addShape({type:"rect"});}return this._background;}},gridlines:{readOnly:true,getter:function(){if(!this._gridlines){this._gridlinesGraphic=new b.Graphic({render:this.get("contentBox")});this._gridlinesGraphic.get("node").style.zIndex=1;this._gridlines=this._gridlinesGraphic.addShape({type:"path"});}return this._gridlines;}},graphic:{readOnly:true,getter:function(){if(!this._graphic){this._graphic=new b.Graphic({render:this.get("contentBox")});this._graphic.get("node").style.zIndex=2;this._graphic.set("autoDraw",false);}return this._graphic;}},groupMarkers:{value:false}}});function o(){}o.ATTRS={dataProvider:{lazyAdd:false,setter:function(E){var D=this._setDataValues(E);if(!this._seriesKeysExplicitlySet){this._seriesKeys=this._buildSeriesKeys(D);}return D;}},seriesKeys:{getter:function(){return this._seriesKeys;},setter:function(D){this._seriesKeysExplicitlySet=true;this._seriesKeys=D;return D;}},ariaLabel:{value:"Chart Application",setter:function(E){var D=this.get("contentBox");if(D){D.setAttribute("aria-label",E);}return E;}},ariaDescription:{value:"Use the up and down keys to navigate between series. Use the left and right keys to navigate through items in a series.",setter:function(D){if(this._description){this._description.setContent("");this._description.appendChild(g.createTextNode(D));}return D;}},tooltip:{valueFn:"_getTooltip",setter:function(D){return this._updateTooltip(D);}},categoryKey:{value:"category"},categoryType:{value:"category"},interactionType:{value:"marker"},axesCollection:{},graph:{valueFn:"_getGraph"},groupMarkers:{value:false}};o.prototype={_groupMarkersChangeHandler:function(F){var E=this.get("graph"),D=F.newVal;if(E){E.set("groupMarkers",D);}},_itemRendered:function(D){this._itemRenderQueue=this._itemRenderQueue.splice(1+b.Array.indexOf(this._itemRenderQueue,D.currentTarget),1);if(this._itemRenderQueue.length<1){this._redraw();}},_getGraph:function(){var D=new b.Graph({chart:this,groupMarkers:this.get("groupMarkers")});D.after("chartRendered",b.bind(function(E){this.fire("chartRendered");},this));return D;},getSeries:function(F){var D=null,E=this.get("graph");if(E){if(q.isNumber(F)){D=E.getSeriesByIndex(F);}else{D=E.getSeriesByKey(F);}}return D;},getAxisByKey:function(F){var D,E=this.get("axes");if(E&&E.hasOwnProperty(F)){D=E[F];}return D;},getCategoryAxis:function(){var E,D=this.get("categoryKey"),F=this.get("axes");if(F.hasOwnProperty(D)){E=F[D];}return E;},_direction:"horizontal",_dataProvider:null,_setDataValues:function(I){if(q.isArray(I[0])){var H,K=[],F=I[0],G=0,E=F.length,J,D=I.length;for(;G<E;++G){H={category:F[G]};for(J=1;J<D;++J){H["series"+J]=I[J][G];}K[G]=H;}return K;}return I;},_seriesCollection:null,_setSeriesCollection:function(D){this._seriesCollection=D;},_getAxisClass:function(D){return this._axisClass[D];},_axisClass:{stacked:b.StackedAxis,numeric:b.NumericAxis,category:b.CategoryAxis,time:b.TimeAxis}