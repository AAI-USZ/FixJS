function (Handlebars,depth0,helpers,partials,data) {  helpers = helpers || Handlebars.helpers;  var buffer = "", stack1, stack2, foundHelper, tmp1, self=this, functionType="function", helperMissing=helpers.helperMissing, undef=void 0, escapeExpression=this.escapeExpression;function program1(depth0,data) {    var buffer = "", stack1;  buffer += "			<li><a href=\"#\"><span>";  stack1 = depth0;  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, ".", { hash: {} }); }  buffer += escapeExpression(stack1) + "</span><button class=\"close\">x</button></a></li>		";  return buffer;}  buffer += "<div class=\"modal-header\">	<button class=\"close\" data-dismiss=\"modal\">Ã—</button>	<h3>Open</h3></div><div class=\"modal-body\">	<ul class=\"nav nav-list\">		";  foundHelper = helpers.fileNames;  stack1 = foundHelper || depth0.fileNames;  stack2 = helpers.each;  tmp1 = self.program(1, program1, data);  tmp1.hash = {};  tmp1.fn = tmp1;  tmp1.inverse = self.noop;  stack1 = stack2.call(depth0, stack1, tmp1);  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "	</ul></div><div class=\"modal-footer\">	<a href=\"#\" class=\"btn btn-inverse ok\">OK</a>	<a href=\"#\" class=\"btn\" data-dismiss=\"modal\">Cancel</a></div>";  return buffer;}