function() {
    return "var root = this;\nvar root_require = require;\nvar root_require_define = require.define;\nvar root_require_resolve = require.resolve;\n\n/*\nDefine module-bundler require functions\n*/\nvar mb = (typeof(exports) !== 'undefined') ? exports : {};\nmb.modules = {};\nmb.require = function(module_name) {\n  if (!mb.modules.hasOwnProperty(module_name)) {\n    if (root_require) {\n      return root_require.apply(this, arguments);\n    }\n    throw \"Cannot find module '\" + module_name + \"'\";\n  }\n  if (!mb.modules[module_name].exports) {\n    mb.modules[module_name].exports = {};\n    mb.modules[module_name].loader.call(root, mb.modules[module_name].exports, mb.require, mb.modules[module_name]);\n  }\n  return mb.modules[module_name].exports;\n};\nmb.require_define = function(obj) {\n  for (var module_name in obj) {\n    mb.modules[module_name] = {loader: obj[module_name]};\n  };\n};\nmb.require_alias = function(alias_name, module_name) {\n  mb.modules[alias_name] = {exports: root.require(module_name)};\n};\nmb.require_resolve = function(module_name) {\n  if (!mb.modules[module_name]) {\n    if (root_require_resolve) {\n      return root_require_resolve.apply(this, arguments);\n    }\n    throw \"Cannot find module '\" + module_name + \"'\"\n  }\n  return module_name;\n};\n\n// overwrite the root implementation\nroot.require = mb.require;\nfor (var key in root_require)\n  root.require[key] = root_require[key];  // copy all additional properties\nroot.require.resolve = mb.root_require_resolve;\n";
  }